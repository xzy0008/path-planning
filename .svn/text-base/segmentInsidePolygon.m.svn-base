function out = segmentInsidePolygon(boundingPolygon, segment, plotResults)
%SEGMENTINSIDEPOLYGON Determines if a segment lies completely within a
%   polygon
%
%   Syntax:  segmentInsidePolygon(boundingPolygon, segment, plotResults)
%       - boundingPolygon = ppPolygon structures that defines the polygon
%       - segment - ppSegment structure containing path segment to check
%       - plotResults (optional) = determines if results of algorithm are
%         plotted
%
%   Output: 
%       returns true if segment is completely inside polygon, false
%       otherwise
%

if nargin==2
    plotResults=false;
end

out=true;

%% create line or arc segment for current path segment
if (segment.ccw==2) % line segment
    origLine=ppLineSegment(segment.startEast,segment.startNorth, ...
        segment.endEast,segment.endNorth);
    
    % check for intersections with each obstacle
    [intersect x y] = ppPolygonIntersectsSegment(boundingPolygon, origLine);
else % arc segment
    origArc=ppCircularArc(segment.startEast,segment.startNorth, ...
        segment.endEast,segment.endNorth,segment.centerEast, ...
        segment.centerNorth,segment.ccw);
    
    [intersect x y] = ppPolygonIntersectsArc(boundingPolygon, origArc);
 
end

% check to see if segment is completely inside polygon
if (intersect==3)
   out=true; % inside polygon
else
    out=false;
end

%% plot results
if plotResults
    figure(1);
    clf;
    hold on;
    plotppPolygon(boundingPolygon,'r'); 
    plot_linetracker_path(segment, gca, 'RS', false, '')   
end

end